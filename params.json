{"name":"Yii2-log","tagline":"Different Yii2 log transports","body":"yii2-log\r\n=======\r\n\r\n[![Build Status](https://travis-ci.org/index0h/yii2-log.png?branch=master)](https://travis-ci.org/index0h/yii2-log) [![Latest Stable Version](https://poser.pugx.org/index0h/yii2-log/v/stable.png)](https://packagist.org/packages/index0h/yii2-log) [![Dependency Status](https://gemnasium.com/index0h/yii2-log.png)](https://gemnasium.com/index0h/yii2-log) [![Scrutinizer Quality Score](https://scrutinizer-ci.com/g/index0h/yii2-log/badges/quality-score.png?s=305ee4c827a791ab27895799d2c3f3ce9553ea51)](https://scrutinizer-ci.com/g/index0h/yii2-log/) [![Code Coverage](https://scrutinizer-ci.com/g/index0h/yii2-log/badges/coverage.png?s=25e175d218529b7ffa0a2f39cb9204e5b4816843)](https://scrutinizer-ci.com/g/index0h/yii2-log/) [![Total Downloads](https://poser.pugx.org/index0h/yii2-log/downloads.png)](https://packagist.org/packages/index0h/yii2-log) [![License](https://poser.pugx.org/index0h/yii2-log/license.png)](https://packagist.org/packages/index0h/yii2-log)\r\n\r\nDifferent Yii2 log transports\r\n\r\n## Now available\r\n\r\n* ElasticsearchTarget\r\n* LogstashFileTarget\r\n* LogstashTarget\r\n* RedisTarget\r\n\r\n## Installation\r\n\r\nThe preferred way to install this extension is through [composer](http://getcomposer.org/download/).\r\n\r\n```sh\r\nphp composer.phar require --prefer-dist index0h/yii2-log \"0.0.1\"\r\n```\r\n\r\nor add line to require section of `composer.json`\r\n\r\n```json\r\n\"index0h/yii2-log\": \"0.0.1\"\r\n```\r\n\r\n## Usage\r\n\r\n### Common properties\r\n\r\n* `$emergencyLogFile`, default `@app/logs/logService.log`\r\n\r\nElasticsearch, Redis and Logstash - are external services, so if they down our logs must be stored in file.\r\nFor that **ElasticsearchTarget**, **LogstashTarget**, **RedisTarget** have option `$emergencyLogFile`. It's alias to\r\nfile where logs will be written on log service is down.\r\n\r\n### ElasticsearchTarget\r\n\r\nStores logs in elasticsearch. All logs transform to json, so you can simply watch them by [kibana](http://www.elasticsearch.org/overview/kibana/).\r\n\r\nExtends yii\\log\\Target, more options see [here](https://github.com/yiisoft/yii2/blob/master/framework/log/Target.php)\r\n\r\n##### Example configuration\r\n\r\n```php\r\n....\r\n'components' => [\r\n    'log' => [\r\n        'targets' => [\r\n            ['class' => 'index0h\\\\log\\\\ElasticsearchTarget'],\r\n        ....\r\n```\r\n\r\n##### Properties\r\n\r\n* `index`, default 'yii' - Elasticsearch index name.\r\n* `type`, default 'log' - Elasticsearch index type.\r\n* `componentName` - Name of yii redis component.\r\n\r\n### LogstashFileTarget\r\n\r\nExtends yii\\log\\FileTarget, more options see [here](https://github.com/yiisoft/yii2/blob/master/framework/log/FileTarget.php)\r\n\r\n##### Example Yii configuration\r\n\r\n```php\r\n....\r\n'components' => [\r\n    'log' => [\r\n        'targets' => [\r\n            ['class' => 'index0h\\\\log\\\\LogstashFileTarget'],\r\n        ....\r\n```\r\n\r\n##### Example Logstash configuration [(current version 1.3.3)](http://logstash.net/docs/1.3.3/)\r\n\r\n```\r\ninput {\r\n  file {\r\n    type => \"yii_log\"\r\n    path => [ \"path/to/yii/logs/*.log*\" ]\r\n    start_position => \"end\"\r\n    stat_interval => 1\r\n    discover_interval => 30\r\n    codec => \"json\"\r\n  }\r\n}\r\n\r\nfilter {\r\n  # ...\r\n}\r\n\r\noutput {\r\n  stdout => {}\r\n}\r\n```\r\n\r\n### LogstashTarget\r\n\r\nExtends yii\\log\\Target, more options see [here](https://github.com/yiisoft/yii2/blob/master/framework/log/Target.php)\r\n\r\n##### Example Yii configuration\r\n\r\n```php\r\n....\r\n'components' => [\r\n    'log' => [\r\n        'targets' => [\r\n            ['class' => 'index0h\\\\log\\\\LogstashTarget'],\r\n            // Or UDP.\r\n            [\r\n                'class' => 'index0h\\\\log\\\\LogstashTarget',\r\n                'dsn' => 'udp://localhost:3333'\r\n            ],\r\n            // Or unix socket file.\r\n            [\r\n                'class' => 'index0h\\\\log\\\\LogstashTarget',\r\n                'dsn' => 'unix:///path/to/logstash.sock'\r\n            ],\r\n        ....\r\n```\r\n\r\n##### Example Logstash configuration [(current version 1.3.3)](http://logstash.net/docs/1.3.3/)\r\n\r\n```\r\ninput {\r\n  tcp {\r\n    type => \"yii_log\"\r\n    port => 3333\r\n    codec => \"json\"\r\n  }\r\n  # Or UDP.\r\n  udp {\r\n    type => \"yii_log\"\r\n    port => 3333\r\n    codec => \"json\"\r\n  }\r\n  # Or unix socket file.\r\n  unix {\r\n    type => \"yii_log\"\r\n    path => \"path/to/logstash.sock\"\r\n    codec => \"json\"\r\n  }\r\n}\r\n\r\nfilter {\r\n  # ...\r\n}\r\n\r\noutput {\r\n  stdout => {}\r\n}\r\n```\r\n\r\n\r\n##### Properties\r\n\r\n* `dsn`, default `tcp://localhost:3333` - URL to logstash service. Allowed schemas:\r\n    **tcp**, **udp**, **unix** - for unix sock files.\r\n\r\n### RedisTarget\r\n\r\nExtends yii\\log\\Target, more options see [here](https://github.com/yiisoft/yii2/blob/master/framework/log/Target.php)\r\n\r\n##### Example Yii configuration\r\n\r\n```php\r\n....\r\n'components' => [\r\n    'log' => [\r\n        'targets' => [\r\n            ['class' => 'index0h\\\\log\\\\RedisTarget'],\r\n        ....\r\n```\r\n\r\n##### Example Logstash configuration [(current version 1.3.3)](http://logstash.net/docs/1.3.3/)\r\n\r\n```\r\ninput {\r\n  redis {\r\n    type => \"yii_log\"\r\n    key => \"yii_log\"\r\n    codec => \"json\"\r\n  }\r\n}\r\n\r\nfilter {\r\n  # ...\r\n}\r\n\r\noutput {\r\n  stdout => {}\r\n}\r\n```\r\n\r\n##### Properties\r\n\r\n* `key`, default `yii_log` - Redis list key.\r\n* `componentName` - Name of yii redis component.\r\n\r\n## Testing\r\n\r\n#### Run tests from IDE (example for PhpStorm)\r\n\r\n- Select Run/Debug Configuration -> Edit Configurations\r\n- Select Add New Configuration -> PHP Script\r\n- Type:\r\n    * File: /path/to/yii-phar/.test.php\r\n    * Arguments run: run  --coverage --html\r\n- OK\r\n\r\n#### Run tests from console\r\n\r\n```sh\r\nmake test\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}